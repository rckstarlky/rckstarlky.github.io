@model Service.Models.Country1
@{
    ViewBag.Title = "Index";
   // Layout = "~/Views/Shared/_newlogingpartial.cshtml";
}
<style type="text/css">
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }


    body {
        font-family: Arial;
        font-size: 10pt;
    }
</style>
   <div class="service-title">
    <h2>Find service at your doorstep</h2>
</div>
@using (Html.BeginForm("Index", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    
    <div class="find-service-section">
        <div class="white-box-container">
            <div class="row">
                <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2 find-input-group">
                    <div class="categeries-label">
                        <label>Categeries</label>
                        @Html.DropDownList("Select-Category", ViewBag.Categeries as SelectList, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2 find-input-group">
                    <div class="categeries-label">
                        <label>City</label>
                        @Html.TextBoxFor(p => p.City, new { @class = "form-control" })
                        @*<input type="text" id="txtPlaces" style="width: 250px" placeholder="Enter a location" />*@
                    </div>
                </div>
                <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2 find-input-group">
                    <div class="categeries-label">
                        <label>ZipCode</label>
                        @*@Html.TextBox("City")*@
                        @*@Html.TextBoxFor(p => p.Zipcode, new { @onblur = "getLocation();" })*@
                        @Html.TextBoxFor(p => p.Zipcode, new { @onchange = "getLocation();", @type = "number", @class = "form-control" })
                        @*<input type="button" onclick="window.location='@Url.Action("GetData","Home")'" value="GetCity" />*@
                        @*<input type="button" onclick='@Url.Action("GetData","Home")' value="GetCity" />*@
                    </div>
                </div>
                <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2 find-input-group">
                    <div class="categeries-label">
                        <label>State</label>
                        @Html.TextBoxFor(p => p.State, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2 find-input-group">
                    <div class="categeries-label">
                        <label>Country</label>
                        @Html.TextBoxFor(p => p.Country, new { @class = "form-control" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-2 col-md-2 col-lg-2 find-input-group">
                    <div class="categeries-label">
                        <input type="button" id="btnsearch" class="btn btn-primary" value="Search" />
                    </div>
                </div>
                <div id="searchpartial" class="search-table-grid">

                </div>
                <div class="info-popup-container">
                    <div id='myModal' class='modal'>
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div id='myModalContent'></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}
@*@Html.Partial("_searchpartial");*@

@Html.Partial("_getintouchpartialview");

<script>function initMap() { console.log('lib loaded') }</script>
@*<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCE719KmR3FYYG3zRMM0jvgkQsmM3xmr0U" type="text/javascript"></script>*@
<script src='http://maps.googleapis.com/maps/api/js?v=3&sensor=false&amp;libraries=places&key=AIzaSyCE719KmR3FYYG3zRMM0jvgkQsmM3xmr0U'></script>
<script src="~/Scripts/JS.js"></script>
@*<script>
    debugger;
    $("#btnsearch").click(function () {
        debugger
        var pincode = $("#Zipcode").val();
        var categorgy = $("#Select-Category").val();
        if (pincode != null && categorgy != null)
        {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("Getprovider", "Home")',
                dataType: "json",
                async: true,
                data: { 'pincode': pincode, 'categorgy': categorgy },
                success: function (data) {
                    
                    $("#providerlist").load();
                }
            });
        } else
        {
            alert("Please Select Category And Enter Zipcode of your Area");
        }
        
    });
    
    
</script>*@
<script>

    $("#searchpartial").load('/Home/Loadproviderlist/')


    function checkloggedinuser(id) {
        var pid = id;
        $.ajax({  
  
            @*type: 'POST',  
            url:'@Url.Action("checkSession","Account" )',//'/Account/checkSession',  
            data: { 'pid': pid },*@
            type: "GET",
            url: '/Account/checkSession/',
            contentType: "application/json; charset=utf-8",
            data: { 'pid': pid },
            datatype: "json",
            success: function (data) {
                debugger;
                if (data!==null && data!="")  
                {
                    $('#myModalContent').html(data);
                    $('#myModal').modal('show');

                    $("#closbtn").click(function () {
                        $('#myModal').modal('hide');
                    });
                }

                else  
                {
                    alert("Please register/login to hire a provider");
                    location.href = "/Account/Login"  
                }  
            },  
            error: function (xhr) {  
                alert('error');  
            }

        });  

    }

</script>
<script>
    // get log
    function response(obj) {
        console.log(obj);
    }

    //get location
    function getLocation() {
        debugger;
        getAddressInfoByZip(document.forms[0].Zipcode.value);
        //alert("Hii");
    }

    //getaddress
    function getAddressInfoByZip(zip) {
        debugger;
        if (zip.length >= 5 && typeof google != 'undefined') {
            if (typeof google == 'undefined') {
                alert("Please enter correct Area Pin")
            }
            debugger;
            var addr = {};
            var geocoder = new google.maps.Geocoder();
            geocoder.geocode({ 'address': zip }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    if (results.length >= 1) {
                        for (var ii = 0; ii < results[0].address_components.length; ii++) {
                            var street_number = route = street = city = state = zipcode = country = formatted_address = '';
                            var types = results[0].address_components[ii].types.join(",");
                            if (types == "street_number") {
                                addr.street_number = results[0].address_components[ii].long_name;
                            }
                            if (types == "route" || types == "point_of_interest,establishment") {
                                addr.route = results[0].address_components[ii].long_name;
                            }
                            //if (types == "sublocality,political" || types == "locality,political" || types == "neighborhood,political" || types == "administrative_area_level_3,political") {
                            //    addr.city = (city == '' || types == "locality,political") ? results[0].address_components[ii].long_name : city;

                            //    document.getElementById("City").value = addr.city;
                            //}
                            if (types == "administrative_area_level_1,political") {
                                addr.state = results[0].address_components[ii].short_name;

                                document.getElementById("State").value = addr.state;
                            }
                            if (types == "postal_code" || types == "postal_code_prefix,postal_code") {
                                addr.zipcode = results[0].address_components[ii].long_name;
                            }
                            if (types == "country,political") {
                                addr.country = results[0].address_components[ii].long_name;

                                document.getElementById("Country").value = addr.country;
                            }
                        }
                        addr.success = true;
                        for (name in addr) {
                            console.log('### google maps api ### ' + name + ': ' + addr[name]);
                        }
                        response(addr);

                    } else {
                        response({ success: false });
                        alert("Please enter your correct Area Pincode/Zip Code");
                    }
                } else {
                    response({ success: false });

                    alert("Please enter your correct Area Pincode/Zip Code");
                }
            });
        } else {
            response({ success: false });
            alert("Please enter your correct Area Pincode/Zip Code");
        }
    }

    //Search city
    const google = window.google;
    google.maps.event.addDomListener(window, 'load', function () {
        var places = new google.maps.places.Autocomplete(document.getElementById('City'));
        google.maps.event.addListener(places, 'place_changed', function () {
            debugger;

            var place = places.getPlace();
            var address = place.formatted_address;
            $("#City").val(place.name);//region

            //var latitude = place.geometry.location.A;
            //var longitude = place.geometry.location.F;
            //var mesg = "Address: " + address;
            //mesg += "\nLatitude: " + latitude;
            //mesg += "\nLongitude: " + longitude;
            //alert(mesg);
        });
    });

    ///get place by zipcode
    //$("#Zipcode").blur(function () {
    //    var el = $(this); if ((el.val().length == 5) && (is_int(el.val())))
    //    {
    //        $.ajax(
    //          {
    //              url: "http://zip.getziptastic.com/v2/IN/" + el.val(), cache: false, dataType: "json", type: "GET",
    //              data: "zip=" + el.val(), success: function (result, success) { if (result.postal_code) { status = true; } $('#State').text(result.state); $('#City').text(result.city); },
    //              error: function (result, success) { $("#Zipcode").slideDown(300); }
    //          });
    //    }
    //});
</script>
